---
- name: Install and Configure cli-ovirt-backup appliance
  hosts: all
  vars:
    epel: https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    clean: false
    dev_packages:
      - gcc
      - libcurl-devel
      - libxml2-devel
      - openssl-devel
      - python36-devel
    packages:
      - python3
      - git
      - python3-pycurl
      - nss
      - python3-lxml
    py_packages:
      - ovirt-engine-sdk-python
      - Click
      - click-shell
      - git+https://github.com/dbinary/cli-ovirt-backup.git # https://github.com/dbinary/cli-ovirt-backup
    rhel_repositories:
      - rhel-8-for-x86_64-baseos-rpms
      - rhel-8-for-x86_64-appstream-rpms
      - rhel-8-for-x86_64-supplementary-rpms
      - codeready-builder-for-rhel-8-x86_64-rpms
  tasks:
    - name: Configure udev devices
      copy:
        src: 01-local.rules
        dest: /etc/udev/rules.d/
      notify: Reboot
    - name: Install epel repository
      yum:
        name: "{{ epel }}"
        state: present
    - name: Enable Red Hat Repositories
      rhsm_repository:
        name: "{{ item }}"
        state: present
      loop: "{{ rhel_repositories }}"
      when:
        - ansible_facts['distribution_major_version'] == "8"
        - ansible_facts['distribution']  == "RedHat"
    - name: Activating PowerTools repository
      command:
        cmd: "dnf config-manager --set-enabled PowerTools"
        warn: false
      when:
        - ansible_facts['distribution']  == "CentOS"
        - ansible_facts['distribution_major_version'] == "8"
    - name: Install required packages
      yum:
        name: "{{ packages }}"
        state: present
    - name: Install development packages
      yum:
        name: "{{ dev_packages }}"
        state: present
    - name: Install python packages and software
      pip:
        name: "{{ item }}"
      loop: "{{ py_packages }}"
    - name: Cleaning dev packages
      yum:
        name: "{{ dev_packages }}"
        state: absent
      when: clean|bool
  handlers:
    - name: Reboot
      reboot:
        test_command: uptime
...
